{"ast":null,"code":"import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport let Subject = /*#__PURE__*/(() => {\n  class Subject extends Observable {\n    constructor() {\n      super();\n      this.closed = false;\n      this.observers = [];\n      this.isStopped = false;\n      this.hasError = false;\n      this.thrownError = null;\n    }\n\n    lift(operator) {\n      const subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n\n    _throwIfClosed() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n    }\n\n    next(value) {\n      errorContext(() => {\n        this._throwIfClosed();\n\n        if (!this.isStopped) {\n          const copy = this.observers.slice();\n\n          for (const observer of copy) {\n            observer.next(value);\n          }\n        }\n      });\n    }\n\n    error(err) {\n      errorContext(() => {\n        this._throwIfClosed();\n\n        if (!this.isStopped) {\n          this.hasError = this.isStopped = true;\n          this.thrownError = err;\n          const {\n            observers\n          } = this;\n\n          while (observers.length) {\n            observers.shift().error(err);\n          }\n        }\n      });\n    }\n\n    complete() {\n      errorContext(() => {\n        this._throwIfClosed();\n\n        if (!this.isStopped) {\n          this.isStopped = true;\n          const {\n            observers\n          } = this;\n\n          while (observers.length) {\n            observers.shift().complete();\n          }\n        }\n      });\n    }\n\n    unsubscribe() {\n      this.isStopped = this.closed = true;\n      this.observers = null;\n    }\n\n    get observed() {\n      var _a;\n\n      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n\n    _trySubscribe(subscriber) {\n      this._throwIfClosed();\n\n      return super._trySubscribe(subscriber);\n    }\n\n    _subscribe(subscriber) {\n      this._throwIfClosed();\n\n      this._checkFinalizedStatuses(subscriber);\n\n      return this._innerSubscribe(subscriber);\n    }\n\n    _innerSubscribe(subscriber) {\n      const {\n        hasError,\n        isStopped,\n        observers\n      } = this;\n      return hasError || isStopped ? EMPTY_SUBSCRIPTION : (observers.push(subscriber), new Subscription(() => arrRemove(observers, subscriber)));\n    }\n\n    _checkFinalizedStatuses(subscriber) {\n      const {\n        hasError,\n        thrownError,\n        isStopped\n      } = this;\n\n      if (hasError) {\n        subscriber.error(thrownError);\n      } else if (isStopped) {\n        subscriber.complete();\n      }\n    }\n\n    asObservable() {\n      const observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n\n  }\n\n  Subject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n  };\n\n  return Subject;\n})();\nexport class AnonymousSubject extends Subject {\n  constructor(destination, source) {\n    super();\n    this.destination = destination;\n    this.source = source;\n  }\n\n  next(value) {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n  }\n\n  error(err) {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n  }\n\n  complete() {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n\n  _subscribe(subscriber) {\n    var _a, _b;\n\n    return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n  }\n\n}","map":{"version":3,"sources":["/Users/salamonszilard/work/szilardsalamon/szilardsalamon/node_modules/rxjs/dist/esm/internal/Subject.js"],"names":["Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","Subject","constructor","closed","observers","isStopped","hasError","thrownError","lift","operator","subject","AnonymousSubject","_throwIfClosed","next","value","copy","slice","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe"],"mappings":"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","sourcesContent":["import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                const copy = this.observers.slice();\n                for (const observer of copy) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        return hasError || isStopped\n            ? EMPTY_SUBSCRIPTION\n            : (observers.push(subscriber), new Subscription(() => arrRemove(observers, subscriber)));\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}